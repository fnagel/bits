(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{374:function(t,e,r){"use strict";r.r(e);var s=r(45),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"interface-ibitappoptions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#interface-ibitappoptions"}},[t._v("#")]),t._v(" Interface: IBitAppOptions")]),t._v(" "),r("h2",{attrs:{id:"properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),r("h3",{attrs:{id:"bitresolver"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bitresolver"}},[t._v("#")]),t._v(" bitResolver")]),t._v(" "),r("p",[t._v("• "),r("code",[t._v("Optional")]),t._v(" "),r("strong",[t._v("bitResolver")]),t._v(": "),r("RouterLink",{attrs:{to:"/api/interfaces/ibitresolver.html"}},[r("code",[t._v("IBitResolver")])])],1),t._v(" "),r("p",[t._v("Allows you to resolve the bit instance based on a given type asynchronously.\nThis allows you, for example to resolve bits using webpack' dynamic import for chunk splitting")]),t._v(" "),r("h4",{attrs:{id:"defined-in"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#defined-in"}},[t._v("#")]),t._v(" Defined in")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/labor-digital/bits/blob/683cbeb/src/Core/types.ts#L127",target:"_blank",rel:"noopener noreferrer"}},[t._v("src/Core/types.ts:127"),r("OutboundLink")],1)]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"bits"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bits"}},[t._v("#")]),t._v(" bits")]),t._v(" "),r("p",[t._v("• "),r("code",[t._v("Optional")]),t._v(" "),r("strong",[t._v("bits")]),t._v(": "),r("RouterLink",{attrs:{to:"/api/interfaces/ibitns.html"}},[r("code",[t._v("IBitNs")])])],1),t._v(" "),r("p",[t._v('The list of registered bits that should be registered in this app.\nYou should provide the "type" and the constructor as a associative list')]),t._v(" "),r("h4",{attrs:{id:"defined-in-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#defined-in-2"}},[t._v("#")]),t._v(" Defined in")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/labor-digital/bits/blob/683cbeb/src/Core/types.ts#L121",target:"_blank",rel:"noopener noreferrer"}},[t._v("src/Core/types.ts:121"),r("OutboundLink")],1)]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"events"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" events")]),t._v(" "),r("p",[t._v("• "),r("code",[t._v("Optional")]),t._v(" "),r("strong",[t._v("events")]),t._v(": "),r("code",[t._v("PlainObject")]),t._v("<"),r("RouterLink",{attrs:{to:"/api/interfaces/iappeventlistener.html"}},[r("code",[t._v("IAppEventListener")])]),t._v(" | "),r("RouterLink",{attrs:{to:"/api/#iappeventlistenerwithpriority"}},[r("code",[t._v("IAppEventListenerWithPriority")])]),t._v(">")],1),t._v(" "),r("p",[t._v("A list of event names and their matching listeners that should\nbe registered when the frameworks creates the event emitter instance")]),t._v(" "),r("h4",{attrs:{id:"defined-in-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#defined-in-3"}},[t._v("#")]),t._v(" Defined in")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/labor-digital/bits/blob/683cbeb/src/Core/types.ts#L143",target:"_blank",rel:"noopener noreferrer"}},[t._v("src/Core/types.ts:143"),r("OutboundLink")],1)]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"lang"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lang"}},[t._v("#")]),t._v(" lang")]),t._v(" "),r("p",[t._v("• "),r("code",[t._v("Optional")]),t._v(" "),r("strong",[t._v("lang")]),t._v(": "),r("code",[t._v("IBitAppTranslationOptions")])]),t._v(" "),r("p",[t._v("Options for the translator and localization")]),t._v(" "),r("h4",{attrs:{id:"defined-in-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#defined-in-4"}},[t._v("#")]),t._v(" Defined in")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/labor-digital/bits/blob/683cbeb/src/Core/types.ts#L132",target:"_blank",rel:"noopener noreferrer"}},[t._v("src/Core/types.ts:132"),r("OutboundLink")],1)]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"mounttag"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mounttag"}},[t._v("#")]),t._v(" mountTag")]),t._v(" "),r("p",[t._v("• "),r("code",[t._v("Optional")]),t._v(" "),r("strong",[t._v("mountTag")]),t._v(": "),r("code",[t._v("string")])]),t._v(" "),r("p",[t._v("The name of the html tag to use as bit mount root element\nDefault: b-mount")]),t._v(" "),r("h4",{attrs:{id:"defined-in-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#defined-in-5"}},[t._v("#")]),t._v(" Defined in")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/labor-digital/bits/blob/683cbeb/src/Core/types.ts#L115",target:"_blank",rel:"noopener noreferrer"}},[t._v("src/Core/types.ts:115"),r("OutboundLink")],1)]),t._v(" "),r("hr"),t._v(" "),r("h3",{attrs:{id:"services"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#services"}},[t._v("#")]),t._v(" services")]),t._v(" "),r("p",[t._v("• "),r("code",[t._v("Optional")]),t._v(" "),r("strong",[t._v("services")]),t._v(": "),r("RouterLink",{attrs:{to:"/api/interfaces/idicontaineroptions.html"}},[r("code",[t._v("IDiContainerOptions")])])],1),t._v(" "),r("p",[t._v("The list of service definitions to register in the service container")]),t._v(" "),r("h4",{attrs:{id:"defined-in-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#defined-in-6"}},[t._v("#")]),t._v(" Defined in")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/labor-digital/bits/blob/683cbeb/src/Core/types.ts#L137",target:"_blank",rel:"noopener noreferrer"}},[t._v("src/Core/types.ts:137"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=i.exports}}]);